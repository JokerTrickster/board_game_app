name: Seed Labels
on:
  workflow_dispatch: {}

jobs:
  seed:
    permissions:
      contents: read
      issues: write
      pull-requests: write
      metadata: read
    runs-on: ubuntu-latest
    steps:
      - name: Upsert labels
        uses: actions/github-script@v7
        with:
          script: |
            const labels = [
              // area/*
              {name:'area/frontend', color:'1f77b4'}, {name:'area/backend', color:'ff7f0e'},
              {name:'area/devops', color:'2ca02c'}, {name:'area/mobile', color:'9467bd'},
              // type/*
              {name:'type/feat', color:'0e8a16'}, {name:'type/fix', color:'d73a4a'},
              {name:'type/refactor', color:'5319e7'}, {name:'type/chore', color:'cfd3d7'},
              {name:'type/epic', color:'0052cc'}, {name:'type/task', color:'00b8d9'},
              // prio/*
              {name:'prio/p0', color:'b60205'}, {name:'prio/p1', color:'e99695'},
              {name:'prio/p2', color:'f9d0c4'},
              // stage/*
              {name:'stage/ready', color:'0e8a16'}, {name:'stage/doing', color:'1d76db'},
              {name:'stage/review', color:'5319e7'}, {name:'stage/qa', color:'fbca04'}
            ];
            const existing = await github.paginate(github.rest.issues.listLabelsForRepo, {
              owner: context.repo.owner, repo: context.repo.repo, per_page: 100
            });
            const byName = new Map(existing.map(l => [l.name, l]));
            for (const l of labels) {
              if (byName.has(l.name)) {
                await github.rest.issues.updateLabel({
                  owner: context.repo.owner, repo: context.repo.repo,
                  name: l.name, new_name: l.name, color: l.color
                });
              } else {
                await github.rest.issues.createLabel({
                  owner: context.repo.owner, repo: context.repo.repo,
                  name: l.name, color: l.color
                });
              }
            }
            core.info(`âœ… Seeded ${labels.length} labels`);
